version: "3"
services:
#  redis:
#    image: redis
#    restart: always
#    hostname: redis
#    container_name: redis
#    ports:
#      - 6379:6379
#    command: ["redis-server", "--appendonly", "yes", "--requirepass","158262751"]
#  mysql:
#    image: mysql
#    #    m1 芯片组
#    #    image: amd64/mysql
#    hostname: mysql
#    container_name: mysql
#    #    command: --default-authentication-plugin=mysql_native_password
#    privileged: true
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      TZ: Asia/Shanghai
#    volumes:
#      - ./mysql/data:/var/lib/mysql
#      #      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
#    #      - ./mysql/init:/docker-entrypoint-initdb.d/
#    ports:
#      - 3306:3306
  nacos:
    # mysql 启动好以后要重新移动一次
    image: nacos/nacos-server:v2.5.1
    container_name: nacos
    env_file:
      - ./nacos/conf/nacos.env
    volumes:
      - ./nacos/conf/nacos.properties:/home/nacos/conf/application.properties
    #      - ./standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    restart: always
#  es-master:
#    container_name: es-master
#    hostname: es-master
#    image: docker.elastic.co/elasticsearch/elasticsearch:${elasticsearch_version}
#    restart: always
#    ports:
#      - 9200:9200
#      - 9300:9300
#    volumes:
#      #      - ./elasticsearch/master/conf/es-master.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elasticsearch/master/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/master/logs:/usr/share/elasticsearch/logs
#      - ./elasticsearch/master/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
#      - ./elasticsearch/master/plugins:/usr/share/elasticsearch/plugins
#    environment:
#      - ES_JAVA_OPTS
#      - "discovery.type=single-node"
#  kibana:
#    container_name: kibana
#    hostname: kibana
#    image: docker.elastic.co/kibana/kibana:${elasticsearch_version}
#    restart: always
#    ports:
#      - 5601:5601
#    volumes:
#      - ./kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
#    environment:
#      - elasticsearch.hosts=http://es-master:9200
#    depends_on:
#      - es-master
#  filebeat:
#    container_name: filebeat
#    hostname: filebeat
#    image: docker.elastic.co/beats/filebeat:${elasticsearch_version}
#    restart: always
#    entrypoint: "filebeat -e -strict.perms=false"
#    # 持久化挂载
#    volumes:
#      - ./filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
#      # 映射到容器中[作为数据源]
#      - /Users/xuweizhi/Documents/projects/spring-cloud/logs:/var/log/
#      - ./filebeat/logs:/usr/share/filebeat/logs
#      - ./filebeat/data:/usr/share/filebeat/data
#    # 将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况
#  logstash:
#    container_name: logstash
#    hostname: logstash
#    image: docker.elastic.co/logstash/logstash:${elasticsearch_version}
#    restart: always
#    volumes:
#      - ./logstash/yml/logstash.yml:/usr/share/logstash/config/logstash.yml
#      - ./logstash/conf/:/usr/share/logstash/pipeline/
#    environment:
#      - TZ=Asia/Shanghai
#    ports:
#      - 5044:5044
#      - 5045:5045
#  oap:
#    image: apache/skywalking-oap-server
#    container_name: oap
#    #    depends_on:
#    #      - es-master
#    restart: always
#    ports:
#      - 11800:11800
#      - 12800:12800
#    #    volumes:
#    #      - ./apache-skywalking-apm-bin/config:/config
#    environment:
#      SW_CORE_RECORD_DATA_TTL: 15
#      SW_CORE_METRICS_DATA_TTL: 15
#      SW_STORAGE: elasticsearch
#      SW_STORAGE_ES_CLUSTER_NODES: es-master:9200
#      SW_ENABLE_UPDATE_UI_TEMPLATE: true
#      SW_ES_USER: elastic
#      SW_ES_PASSWORD: elastic
#      TZ: Asia/Shanghai
#  #        JAVA_OPTS: "-Xms2048m -Xmx2048m"
#  ui:
#    image: apache/skywalking-ui
#    container_name: ui
#    depends_on:
#      - oap
#    restart: always
#    ports:
#      - 8080:8080
#    environment:
#      SW_OAP_ADDRESS: http://oap:12800
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus/conf:/etc/prometheus
#      - ./prometheus/data:/prometheus
#      - /etc/localtime:/etc/localtime:ro
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - '9090:9090'
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - '3000:3000'
#    volumes:
#      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini  #grafana报警邮件配置
#      - /etc/localtime:/etc/localtime:ro
#      - ./grafana/data:/var/lib/grafana
#    depends_on:
#      - prometheus  #grafana需要在prometheus之后启动
#  redis_exporter:
#    image: oliver006/redis_exporter
#    container_name: redis_exporter
#    ports:
#      - "9121:9121"
#    environment:
#      REDIS_ADDR: redis:6379
#      REDIS_PASSWORD: kzkj@_Cloud.1
#  mysqld-exporter:
#    image: prom/mysqld-exporter
#    container_name: mysqld-exporter
#    volumes:
#      - ./exporter.cnf:/etc/mysql/my.cnf
#    command:
#      - --config.my-cnf=/etc/mysql/my.cnf
#      - --collect.global_status
#      - --collect.info_schema.innodb_metrics
#      - --collect.auto_increment.columns
#      - --collect.binlog_size
#      - --collect.engine_innodb_status
#      - --collect.engine_tokudb_status
#      - --collect.global_variables
#      - --collect.info_schema.processlist
#      - --collect.info_schema.query_response_time
#      - --collect.info_schema.tables
#      - --collect.info_schema.tablestats
#      - --collect.perf_schema.eventsstatements
#      - --collect.perf_schema.eventswaits
#      - --collect.perf_schema.file_events
#      - --collect.perf_schema.indexiowaits
#      - --collect.perf_schema.tablelocks
#      - --collect.slave_status
#    ports:
#      - 9104:9104
#  node-exporter:
#    image: prom/node-exporter
#    container_name: node-exporter
#    ports:
#      - "9100:9100"
#  postgres_exporter:
#    image: quay.io/prometheuscommunity/postgres-exporter
#    ports:
#      - "9187:9187"
#    environment:
#      DATA_SOURCE_URI: 192.168.110.80:5432/postgres?sslmode=disable
#      DATA_SOURCE_USER: postgres
#      DATA_SOURCE_PASS: postgres
#  postgres-exporter-x:
#    image: bitnami/postgres-exporter
#    restart: always
#    container_name: postgres-exporter-x
#    environment:
#      DATA_SOURCE_NAME: "postgresql://postgres:postgres@192.168.110.80:5432/postgres?sslmode=disable"
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - 9187:9187
#    networks:
#      - default