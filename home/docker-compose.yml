version: "3"
services:
  #  zoo1:
  #    image: zookeeper
  #    restart: always
  #    hostname: zoo1
  #    container_name: zoo1
  #    ports:
  #      - 2181:2181
  #    environment:
  #      ZOO_MY_ID: 1
  #      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  #  zoo2:
  #    image: zookeeper
  #    restart: always
  #    hostname: zoo2
  #    container_name: zoo2
  #    ports:
  #      - 2182:2181
  #    environment:
  #      ZOO_MY_ID: 2
  #      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181
  #  zoo3:
  #    image: zookeeper
  #    restart: always
  #    hostname: zoo3
  #    container_name: zoo3
  #    ports:
  #      - 2183:2181
  #    environment:
  #      ZOO_MY_ID: 3
  #      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
  #  redis:
  #    image: redis
  #    restart: always
  #    hostname: redis
  #    container_name: redis
  #    ports:
  #      - 15826:6379
  mysql:
    image: mysql
    hostname: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    volumes:
      - ./mysql/data:/var/lib/mysql
      #      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init:/docker-entrypoint-initdb.d/
    ports:
      - 3306:3306
  nacos:
    image: nacos/nacos-server:2.0.2
    container_name: nacos
    env_file:
      - ./nacos/config/nacos.env
    links:
      - mysql:mysql
    volumes:
      - ./nacos/config/nacos.properties:/home/nacos/init.d/custom.properties
    #      - ./standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    depends_on:
      - mysql
    restart: always

#  nginx:
#    container_name: nginx
#    image: nginx:1.16
#    restart: always
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./nginx/www:/usr/share/nginx/html
#      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
#      - ./nginx/logs:/var/log/nginx
#    depends_on:
#      - spring-elastic
#  es-master:
#    container_name: es-master
#    hostname: es-master
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
#    restart: always
#    ports:
#      - 9200:9200
#      - 9300:9300
#    volumes:
#      - ./elasticsearch/master/conf/es-master.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elasticsearch/master/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/master/logs:/usr/share/elasticsearch/logs
#      - ./elasticsearch/master/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
#      - ./elasticsearch/master/plugins:/usr/share/elasticsearch/plugins
#    environment:
#      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#
#  es-slave1:
#    container_name: es-slave1
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
#    restart: always
#    ports:
#      - 9201:9200
#      - 9301:9300
#    volumes:
#      - ./elasticsearch/slave1/conf/es-slave1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elasticsearch/slave1/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/slave1/logs:/usr/share/elasticsearch/logs
#      - ./elasticsearch/slave1/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
#      - ./elasticsearch/slave1/plugins:/usr/share/elasticsearch/plugins
#    environment:
#      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#
#  es-slave2:
#    container_name: es-slave2
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
#    restart: always
#    ports:
#      - 9202:9200
#      - 9302:9300
#    volumes:
#      - ./elasticsearch/slave2/conf/es-slave2.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./elasticsearch/slave2/data:/usr/share/elasticsearch/data
#      - ./elasticsearch/slave2/logs:/usr/share/elasticsearch/logs
#      - ./elasticsearch/slave2/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
#      - ./elasticsearch/slave2/plugins:/usr/share/elasticsearch/plugins
#    environment:
#      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#
#  es-head:
#    container_name: es-head
#    image: mobz/elasticsearch-head:5
#    restart: always
#    ports:
#      - 9100:9100
#    depends_on:
#      - es-master
#      - es-slave1
#      - es-slave2
#
#  kibana:
#    container_name: kibana
#    hostname: kibana
#    image: docker.elastic.co/kibana/kibana:7.13.3
#    restart: always
#    ports:
#      - 5601:5601
#    volumes:
#      - ./kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
#    environment:
#      - elasticsearch.hosts=http://es-master:9200
#    depends_on:
#      - es-master
#      - es-slave1
#      - es-slave2
#  cerebro:
#    image: lmenezes/cerebro
#    container_name: cerebro
#    restart: always
#    ports:
#      - "9000:9000"
#    command:
#      - -Dhosts.0.host=http://es-master:9200
#    depends_on:
#      - es-master
#
#  filebeat:
#    # 容器名称
#    container_name: filebeat
#    # 主机名称
#    hostname: filebeat
#    # 镜像
#    image: docker.elastic.co/beats/filebeat:7.13.3
#    # 重启机制
#    restart: always
#    # 配置文件无权限访问的问题
#    entrypoint: "filebeat -e -strict.perms=false"
#    # 持久化挂载
#    volumes:
#      - ./filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
#      # 映射到容器中[作为数据源]
#      - ./logs:/home/project/spring-boot-elasticsearch/logs
#      - ./filebeat/logs:/usr/share/filebeat/logs
#      - ./filebeat/data:/usr/share/filebeat/data
#    # 将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况
#    links:
#      - logstash
#    # 依赖服务[可无]
#    depends_on:
#      - es-master
#      - es-slave1
#      - es-slave2
#
#  logstash:
#    container_name: logstash
#    hostname: logstash
#    image: docker.elastic.co/logstash/logstash:7.13.3
#    restart: always
#    volumes:
#      # 映射到容器中
#      - ./logstash/conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    environment:
#      - TZ=Asia/Shanghai
#    links:
#     - es-master:es-master
#    ports:
#      - 4560:4560
#    depends_on:
#      - es-master
#      - es-slave1
#      - es-slave2
#
#  spring-elastic:
#    container_name: spring-elastic
#    hostname: spring-elastic
#    image: spring-elastic
#    restart: always
#    working_dir: /home
#    # 编译
#    build: ..
#    volumes:
#      - ./logs:/logs
#    depends_on:
#      - es-master
#      - es-slave1
#      - es-slave2
#    command: mvn clean spring-boot:run -Dspring-boot.run.profiles=docker
